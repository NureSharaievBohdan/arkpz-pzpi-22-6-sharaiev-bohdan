Харківський національний університет радіоелектроніки
Факультет комп’ютерних наук
Кафедра програмної інженерії
ЗВІТ
до лабораторної роботи №5 з дисципліни
“Аналіз та рефакторинг коду”
Харків 2024

Перевірив:
ст. викл. Сокорчук І.П.
Виконав ст. гр. ПЗПІ-22-6
Шараєв Б. О.

2

1. РОЗГОРТАННЯ ПРОГРАМНОЇ СИСТЕМИ ТА ДЕМОНСТРАЦІЯ ЇЇ
РОБОТИ

1.1 Мета роботи
Розгорнути програмну систему та продемонструвати її роботу.

1.2 Хід роботи

1.2.1 Розгортання бази даних.

Для переміщення бази даних на хмарний хостинг використано сервіс
Neon. Ось покрокова інструкція налаштування бази даних і її переміщення на
хмару:
- Зареєстровано платформу Neon, створено безкоштовний проект для
доступу до функціоналу сервісу.
- У межах проекту створено інстанс PostgreSQL. Вибрано тип бази
даних (PostgreSQL), вказано ім’я для інстансу та інші параметри, такі
як розмір бази.
- Після створення інстансу налаштовано параметри для безпечного
з’єднання з базою даних. У консолі Neon отримано URL
підключення, який містить усі параметри для з’єднання з базою
даних, такі як адреса сервера, порт, ім’я користувача та пароль.
Для перенесення даних з локальної бази на хмарну використано
стандартні інструменти PostgreSQL:
- pg_dump для створення дампа локальної бази даних:
pg_dump -U postgres -h localhost -Fc RadGuard >
backup.dump
- pg_restore для відновлення даних на хмарному інстансі:
 pg_restore -U RadGuard_owner -h ep-black-winda2qff958.eu-central-1.aws.neon.tech -d RadGuard
backup.dump
3
Ці команди дозволяють перенести структуру бази даних та всі дані в
хмарну базу. Після того як база даних була переміщена на хмару, я протестував
підключення до неї, використовуючи отриманий URL підключення. Це
дозволило перевірити, чи коректно працює з’єднання між моїм застосунком і
хмарною базою даних.
Завдяки цьому процесу база даних була успішно переміщена на хмару,
що дозволило забезпечити надійне зберігання даних.

1.2.2 Розгортання серверної частини.

Для розгортання серверної частини проєкту з моніторингу радіації,
розробленої на фреймворку Django, було використано хмарний сервіс Railway.
Розгортання почалося з реєстрації на платформі Railway через офіційний
вебсайт. Після успішної реєстрації було створено новий проєкт, доступний у
панелі управління. Railway надає зручний інтерфейс, що дозволяє швидко
інтегрувати проєкти, використовуючи файли проєкту.
Для підготовки проєкту до розгортання було створено кілька
конфігураційних файлів. У корені проєкту я створив файл requirements.txt,
який містить перелік усіх залежностей. Цей файл дозволяє Railway
автоматично встановити потрібні бібліотеки під час розгортання. Серед них
були зазначені Django, gunicorn для запуску сервера, psycopg2 для інтеграції з
базою даних, а також інші бібліотеки, необхідні для роботи проєкту.
Ще одним важливим кроком стало створення команди для запуску
серверної частини через WSGI-сервер Gunicorn. Це забезпечує стабільну
роботу Django у хмарному середовищі. Procfile виглядав так:
1 web: gunicorn RadGuardBack.wsgi:application
4
Після підключення репозиторію до Railway я додав змінні середовища в
налаштування проєкту. Серед них були:
- DATABASE_URL для з’єднання з базою даних.
- DEBUG, встановлений у значення False для бойового середовища.
- ALLOWED_HOSTS, де вказані домени Railway.
Після цього Railway створив Docker-контейнер для мого проєкту,
використовуючи файли requirements.txt і команди запуску серверу Gunicorn.
Коли сервер було розгорнуто, було виконано фінальні налаштування
через термінал Railway. Зокрема, було виконано команду для застосування
міграцій:
1 python manage.py migrate
Це дозволило налаштувати структуру бази даних на хмарному сервері.
Після завершення всіх налаштувань, було отримано посилання на
розгорнутий проєкт:
1 https://radguardback-production.up.railway.app/api
Після цього було перевірено роботу серверної частини, виконавши
кілька тестових запитів до API. Усі ендпоінти працювали коректно, з'єднання
з базою даних було стабільним.

1.3 Висновки
Під час виконання лабораторної роботи було розгорнуто розроблювану
програмну систему та продемонструвано її роботу.
Посилання на відеозапис: https://youtu.be/2uo5tthoUSs
